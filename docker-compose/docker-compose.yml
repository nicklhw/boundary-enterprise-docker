# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

services:
  db:
    container_name: postgres
    image: postgres:15
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=boundary
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 5s
      retries: 5

  db-init:
    image: hashicorp/boundary-enterprise
    # https://developer.hashicorp.com/boundary/docs/commands/database/init
    command: ["database", "init", "-skip-auth-method-creation", "-config", "/boundary/config/config.hcl"]
    volumes:
      - ./boundary/controller/config:/boundary/config
    environment:
      - BOUNDARY_POSTGRES_URL=postgresql://postgres:postgres@db/boundary?sslmode=disable
      - BOUNDARY_LICENSE=${BOUNDARY_LICENSE}
    cap_add:
      - IPC_LOCK
    depends_on:
      db:
        condition: service_healthy

  boundary-controller:
    container_name: boundary-controller
    image: hashicorp/boundary-enterprise
    hostname: "boundary"
    command: ["server", "-config", "/boundary/config/config.hcl"]
    volumes:
      - ./boundary/controller/config:/boundary/config
    ports:
      - "9200:9200"
      - "9201:9201"
      - "9203:9203"
    environment:
      - BOUNDARY_POSTGRES_URL=postgresql://postgres:postgres@db:5432/boundary?sslmode=disable
      - BOUNDARY_LICENSE=${BOUNDARY_LICENSE}
    cap_add:
      - IPC_LOCK
    depends_on:
      db-init:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "wget", "-O-", "--no-check-certificate", "http://boundary:9200"]
      interval: 3s
      timeout: 5s
      retries: 5

  boundary-worker:
    container_name: boundary-worker
    image: hashicorp/boundary-enterprise
    hostname: "boundary-worker"
    command: [ "server", "-config", "/boundary/config/config.hcl" ]
    volumes:
      - ./boundary/worker/config:/boundary/config
      - ./boundary/worker/data:/boundary/data
    ports:
      - "9202:9202"
    cap_add:
      - IPC_LOCK
    depends_on:
      boundary-controller:
        condition: service_healthy

  # Boundary controller is the last service to start and may not be fully up
  # by the time the docker compose command returns, so we force a wait by
  # depending a placeholder on the controller healthcheck
  wait:
    image: busybox:latest
    command: ["sleep", "1"]
    depends_on:
      boundary-controller:
        condition: service_healthy

  # Private Database Targets - not exposed to host network, only available via Boundary
  ssh-target:
    container_name: ssh-target
    hostname: "ssh-target"
    build:
      context: ./ssh-target

#  ansible:
#    container_name: ansible
#    build:
#      context: ./ansible
#      args:
#        ANSIBLE_CORE_VERSION: 2.16.4
#        ANSIBLE_VERSION: 9.2.0
#        ANSIBLE_LINT: 6.22.2
#    volumes:
#      - ./ansible/hosts:/etc/ansible/hosts
#    environment:
#      BOUNDARY_ADDR: https://boundary:9200
#      BOUNDARY_TLS_INSECURE: true
#    entrypoint: "tail -f /dev/null"




